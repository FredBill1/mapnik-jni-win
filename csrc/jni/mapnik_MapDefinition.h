/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class mapnik_MapDefinition */

#ifndef _Included_mapnik_MapDefinition
#define _Included_mapnik_MapDefinition
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     mapnik_MapDefinition
 * Method:    alloc
 * Signature: (IILjava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_mapnik_MapDefinition_alloc__IILjava_lang_String_2
  (JNIEnv *, jclass, jint, jint, jstring);

/*
 * Class:     mapnik_MapDefinition
 * Method:    alloc
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_mapnik_MapDefinition_alloc__
  (JNIEnv *, jclass);

/*
 * Class:     mapnik_MapDefinition
 * Method:    copy
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_mapnik_MapDefinition_copy
  (JNIEnv *, jclass, jlong);

/*
 * Class:     mapnik_MapDefinition
 * Method:    dealloc
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_mapnik_MapDefinition_dealloc
  (JNIEnv *, jobject, jlong);

/*
 * Class:     mapnik_MapDefinition
 * Method:    loadMap
 * Signature: (Ljava/lang/String;Z)V
 */
JNIEXPORT void JNICALL Java_mapnik_MapDefinition_loadMap
  (JNIEnv *, jobject, jstring, jboolean);

/*
 * Class:     mapnik_MapDefinition
 * Method:    loadMapString
 * Signature: (Ljava/lang/String;ZLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_mapnik_MapDefinition_loadMapString
  (JNIEnv *, jobject, jstring, jboolean, jstring);

/*
 * Class:     mapnik_MapDefinition
 * Method:    getWidth
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_mapnik_MapDefinition_getWidth
  (JNIEnv *, jobject);

/*
 * Class:     mapnik_MapDefinition
 * Method:    getHeight
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_mapnik_MapDefinition_getHeight
  (JNIEnv *, jobject);

/*
 * Class:     mapnik_MapDefinition
 * Method:    setWidth
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_mapnik_MapDefinition_setWidth
  (JNIEnv *, jobject, jint);

/*
 * Class:     mapnik_MapDefinition
 * Method:    setHeight
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_mapnik_MapDefinition_setHeight
  (JNIEnv *, jobject, jint);

/*
 * Class:     mapnik_MapDefinition
 * Method:    resize
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_mapnik_MapDefinition_resize
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     mapnik_MapDefinition
 * Method:    getSrs
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_mapnik_MapDefinition_getSrs
  (JNIEnv *, jobject);

/*
 * Class:     mapnik_MapDefinition
 * Method:    setSrs
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_mapnik_MapDefinition_setSrs
  (JNIEnv *, jobject, jstring);

/*
 * Class:     mapnik_MapDefinition
 * Method:    setBufferSize
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_mapnik_MapDefinition_setBufferSize
  (JNIEnv *, jobject, jint);

/*
 * Class:     mapnik_MapDefinition
 * Method:    getBufferSize
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_mapnik_MapDefinition_getBufferSize
  (JNIEnv *, jobject);

/*
 * Class:     mapnik_MapDefinition
 * Method:    getBasePath
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_mapnik_MapDefinition_getBasePath
  (JNIEnv *, jobject);

/*
 * Class:     mapnik_MapDefinition
 * Method:    setBasePath
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_mapnik_MapDefinition_setBasePath
  (JNIEnv *, jobject, jstring);

/*
 * Class:     mapnik_MapDefinition
 * Method:    getLayerCount
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_mapnik_MapDefinition_getLayerCount
  (JNIEnv *, jobject);

/*
 * Class:     mapnik_MapDefinition
 * Method:    getLayer
 * Signature: (I)Lmapnik/Layer;
 */
JNIEXPORT jobject JNICALL Java_mapnik_MapDefinition_getLayer
  (JNIEnv *, jobject, jint);

/*
 * Class:     mapnik_MapDefinition
 * Method:    setLayer
 * Signature: (ILmapnik/Layer;)V
 */
JNIEXPORT void JNICALL Java_mapnik_MapDefinition_setLayer
  (JNIEnv *, jobject, jint, jobject);

/*
 * Class:     mapnik_MapDefinition
 * Method:    removeLayer
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_mapnik_MapDefinition_removeLayer
  (JNIEnv *, jobject, jint);

/*
 * Class:     mapnik_MapDefinition
 * Method:    removeAllLayers
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_mapnik_MapDefinition_removeAllLayers
  (JNIEnv *, jobject);

/*
 * Class:     mapnik_MapDefinition
 * Method:    addLayer
 * Signature: (Lmapnik/Layer;)V
 */
JNIEXPORT void JNICALL Java_mapnik_MapDefinition_addLayer
  (JNIEnv *, jobject, jobject);

/*
 * Class:     mapnik_MapDefinition
 * Method:    _setAspectFixMode
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_mapnik_MapDefinition__1setAspectFixMode
  (JNIEnv *, jobject, jint);

/*
 * Class:     mapnik_MapDefinition
 * Method:    _getAspectFixMode
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_mapnik_MapDefinition__1getAspectFixMode
  (JNIEnv *, jobject);

/*
 * Class:     mapnik_MapDefinition
 * Method:    getStyleNames
 * Signature: ()Ljava/util/Collection;
 */
JNIEXPORT jobject JNICALL Java_mapnik_MapDefinition_getStyleNames
  (JNIEnv *, jobject);

/*
 * Class:     mapnik_MapDefinition
 * Method:    getStyle
 * Signature: (Ljava/lang/String;)Lmapnik/FeatureTypeStyle;
 */
JNIEXPORT jobject JNICALL Java_mapnik_MapDefinition_getStyle
  (JNIEnv *, jobject, jstring);

/*
 * Class:     mapnik_MapDefinition
 * Method:    addStyle
 * Signature: (Ljava/lang/String;Lmapnik/FeatureTypeStyle;)V
 */
JNIEXPORT void JNICALL Java_mapnik_MapDefinition_addStyle
  (JNIEnv *, jobject, jstring, jobject);

/*
 * Class:     mapnik_MapDefinition
 * Method:    removeStyle
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_mapnik_MapDefinition_removeStyle
  (JNIEnv *, jobject, jstring);

/*
 * Class:     mapnik_MapDefinition
 * Method:    getMaximumExtent
 * Signature: ()Lmapnik/Box2d;
 */
JNIEXPORT jobject JNICALL Java_mapnik_MapDefinition_getMaximumExtent
  (JNIEnv *, jobject);

/*
 * Class:     mapnik_MapDefinition
 * Method:    setMaximumExtent
 * Signature: (Lmapnik/Box2d;)V
 */
JNIEXPORT void JNICALL Java_mapnik_MapDefinition_setMaximumExtent
  (JNIEnv *, jobject, jobject);

/*
 * Class:     mapnik_MapDefinition
 * Method:    getCurrentExtent
 * Signature: ()Lmapnik/Box2d;
 */
JNIEXPORT jobject JNICALL Java_mapnik_MapDefinition_getCurrentExtent
  (JNIEnv *, jobject);

/*
 * Class:     mapnik_MapDefinition
 * Method:    getBufferedExtent
 * Signature: ()Lmapnik/Box2d;
 */
JNIEXPORT jobject JNICALL Java_mapnik_MapDefinition_getBufferedExtent
  (JNIEnv *, jobject);

/*
 * Class:     mapnik_MapDefinition
 * Method:    zoom
 * Signature: (D)V
 */
JNIEXPORT void JNICALL Java_mapnik_MapDefinition_zoom
  (JNIEnv *, jobject, jdouble);

/*
 * Class:     mapnik_MapDefinition
 * Method:    zoomToBox
 * Signature: (Lmapnik/Box2d;)V
 */
JNIEXPORT void JNICALL Java_mapnik_MapDefinition_zoomToBox
  (JNIEnv *, jobject, jobject);

/*
 * Class:     mapnik_MapDefinition
 * Method:    zoomAll
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_mapnik_MapDefinition_zoomAll
  (JNIEnv *, jobject);

/*
 * Class:     mapnik_MapDefinition
 * Method:    pan
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_mapnik_MapDefinition_pan
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     mapnik_MapDefinition
 * Method:    panAndZoom
 * Signature: (IID)V
 */
JNIEXPORT void JNICALL Java_mapnik_MapDefinition_panAndZoom
  (JNIEnv *, jobject, jint, jint, jdouble);

/*
 * Class:     mapnik_MapDefinition
 * Method:    getScale
 * Signature: ()D
 */
JNIEXPORT jdouble JNICALL Java_mapnik_MapDefinition_getScale
  (JNIEnv *, jobject);

/*
 * Class:     mapnik_MapDefinition
 * Method:    getScaleDenominator
 * Signature: ()D
 */
JNIEXPORT jdouble JNICALL Java_mapnik_MapDefinition_getScaleDenominator
  (JNIEnv *, jobject);

/*
 * Class:     mapnik_MapDefinition
 * Method:    getBackground
 * Signature: ()Lmapnik/Color;
 */
JNIEXPORT jobject JNICALL Java_mapnik_MapDefinition_getBackground
  (JNIEnv *, jobject);

/*
 * Class:     mapnik_MapDefinition
 * Method:    setBackground
 * Signature: (Lmapnik/Color;)V
 */
JNIEXPORT void JNICALL Java_mapnik_MapDefinition_setBackground
  (JNIEnv *, jobject, jobject);

/*
 * Class:     mapnik_MapDefinition
 * Method:    getBackgroundImage
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_mapnik_MapDefinition_getBackgroundImage
  (JNIEnv *, jobject);

/*
 * Class:     mapnik_MapDefinition
 * Method:    setBackgroundImage
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_mapnik_MapDefinition_setBackgroundImage
  (JNIEnv *, jobject, jstring);

/*
 * Class:     mapnik_MapDefinition
 * Method:    saveMap
 * Signature: (Ljava/lang/String;Z)V
 */
JNIEXPORT void JNICALL Java_mapnik_MapDefinition_saveMap
  (JNIEnv *, jobject, jstring, jboolean);

/*
 * Class:     mapnik_MapDefinition
 * Method:    saveMapToString
 * Signature: (Z)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_mapnik_MapDefinition_saveMapToString
  (JNIEnv *, jobject, jboolean);

#ifdef __cplusplus
}
#endif
#endif
